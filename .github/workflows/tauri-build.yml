name: Build Tauri App

on:
  push:
    branches:
      - master  # 触发构建的分支，请修改为你的主分支名称
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: windows-latest  # 使用 Windows 服务器
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20  # 请根据项目需要修改 Node 版本
          cache: 'npm'

      - name: 安装 Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc  # 使用 MSVC 工具链

      - name: 安装依赖
        run: npm install

      - name: 构建前端
        run: npm run build  # 如果你的前端需要构建

      - name: 安装 Tauri CLI
        run: npm install tauri

      - name: 构建 Tauri 绿色版
        run: npx tauri build --target portable

      - name: 获取 package.json 中的版本号
        id: get_version
        run: |
          echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: 创建 GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: 上传绿色版构建产物到 Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src-tauri/target/release/bundle/portable/*.exe  # 请根据实际路径调整
          asset_name: tauri-app-${{ steps.get_version.outputs.version }}.exe
          asset_content_type: application/octet-stream
