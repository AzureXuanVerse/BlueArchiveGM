name: Build Tauri App

on:
  push:
    branches:
      - master  # 触发构建的分支
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: windows-latest  # 使用 Windows 服务器
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 jq
        run: choco install jq  # 安装 jq，用于读取 package.json 的版本号

      - name: 读取 package.json 版本号
        id: package_version
        run: echo "VERSION=$(node -p \"require('./package.json').version\")" >> $GITHUB_ENV

      - name: 获取最新提交信息
        id: commit_message
        run: echo "MESSAGE=$(git log -1 --pretty=format:%s)" >> $GITHUB_ENV

      - name: 安装 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20  # 你可以改成你项目的 Node 版本
          cache: 'npm'

      - name: 安装 Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc  # 使用 MSVC 工具链

      - name: 安装依赖
        run: npm install

      - name: 构建前端
        run: npm run build

      - name: 安装 Tauri
        run: npm install tauri

      - name: 构建 Tauri
        run: npx tauri build

      - name: 重命名 EXE
        run: rename src-tauri/target/release/*.exe BlueArchiveGM.exe  # Windows 上使用 rename 命令

      - name: 上传 EXE 作为构建产物
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app
          path: src-tauri/target/release/BlueArchiveGM.exe

      - name: 创建 GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.VERSION }}"
          name: "BaGMTool v${{ env.VERSION }}"
          body: "${{ env.MESSAGE }}"
          draft: false
          prerelease: true  # 标记为预发布版本
          files: src-tauri/target/release/BlueArchiveGM.exe
        env:
          GITHUB_TOKEN: ${{ secrets.KITANO_GM_TOKEN }}  # 使用 GitHub 提供的 Token 或自定义的 PAT
